/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package server;

import com.esotericsoftware.kryonet.Connection;
import com.esotericsoftware.kryonet.Listener;
import com.esotericsoftware.kryonet.Server;

import java.util.ArrayList;

public class ServerApp extends Listener {

    static Server server;
    static int tcpPort = 54555;

    public static void main(String[] args)  throws Exception {
        System.out.println("Creating the server...");

        server = new Server();
        server.getKryo().register(IntermediaryStart.class);
        server.getKryo().register(PlayMessage.class);
        server.bind(tcpPort);

        server.start();

        server.addListener(new ServerApp());

        System.out.println("Server is operational");
    }

    public void connected(Connection c) {
        System.out.println("Received a connection from "+c.getRemoteAddressTCP().getHostString());
        IntermediaryStart intermediaryStart = new IntermediaryStart();
        ArrayList<Integer> ids = new ArrayList<>();
        ArrayList<String> names = new ArrayList<>();

        //Fake data
        ids.add(1);
        ids.add(2);
        names.add("Player1");
        names.add("Player2");

        intermediaryStart.playerIds = ids;
        intermediaryStart.playerNames = names;

        c.sendTCP(intermediaryStart);
    }

    public void received(Connection c, Object p) {
        if (p instanceof PlayMessage) {
            PlayMessage play = (PlayMessage) p;
            // TODO: Add to matchmaking
            System.out.printf("Player: %s", play);
        }

    }

    public void disconnected(Connection c) {
        System.out.println("A client disconnected!");
    }
}
